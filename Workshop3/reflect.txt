///////////////////////////////////////////////////////////////////////////
                              Reflection
                          Workshop - #3 (P2)
Full Name  : Manav Alpeshbhai Zadafiya
Student ID#: 144095221
Email      : mazadafiya@myseneca.ca
Section    : ZEE

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

Answer 1:

Code for preffered part: (c_bagWeight >= 1 && c_bagWeight <= 4) && bagWeight1 == 250

A)I have used 3 relational expression: 
  1. ">=" and "<=" to check if c_bagweight is in required range of 1 to 4.
  2. "==" to check if bagweight1 has exactly same value of 250

B)And only 2 logical expression has been used, that is, &&(and) to validate both condition must be true to give output 1.



Answer2:
The two correct ways for output #9 are:
  1. Not using De morgon's Law: productId3 != productId1 && productId3 != productId2
  2. Using De morgon's Law    : !(productId3 == productId1 || productId3 == productId2)
I have used 1st method to get required output as it is more convenient in his case, while something using De morgon's law is more convenient to get required output easily.



Answer 3: 
The first method for organizing variable is to group them by thier specific data types at the top of the our program:
Ex. const double GRAMS_IN_LBS = 453.5924;                                                                             // const double
    int bagWeight1, bagWeight2, bagWeight3, c_bagWeight;                                                              // int 
    char type1, type2, type3, servecream1, servecream2, servecream3, c_strength, c_servecream;                        // char

and 2nd method is to group them by their functionality:
Ex. const double GRAMS_IN_LBS = 453.5924;                                                            //available option  
    int bagWeight1, bagWeight2, bagWeight3;                                                          
    char type1, type2, type3, servecream1, servecream2, servecream3;

    int c_bagWeight;                                                                                 // User input (prefrence) 
    char c_strength, c_servecream;                                                                

